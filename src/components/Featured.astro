---
import Button from "components/common/Button.astro";
import type { Project } from "types";
import { Image } from "astro:assets";

export interface Props {
    projects: Array<Project>;
}

const { projects } = Astro.props;
---

<div class="my-48 pt-16 flex flex-col items-center">
    <div class="grid grid-cols-3">
        {
            projects.map((project) => (
                <a
                    href={`/projects/${project.slug}`}
                    class="group bg-white dotted-border dark:border-none dark:bg-[#19122e] p-2 md:p-4 flex flex-col gap-2 odd:-rotate-3 even:rotate-3 even:-translate-y-8 even:md:-translate-y-16 z-0 hover:z-10 -mx-4 md:-mx-10"
                >
                    <div class="w-full aspect-[2/3] overflow-y-hidden img-container">
                        {project.data.image_full && (
                            <Image
                                class="w-full object-cover brightness-100 group-hover:brightness-100 transition-all"
                                src={project.data.image_full}
                                alt={project.data.title}
                            />
                        )}
                    </div>
                    <h1 class="font-medium opacity-0 md:group-hover:opacity-100 bg-white dark:bg-[#19122e] absolute bottom-0 w-full -mx-4 px-4 pt-4 pb-6 transition-opacity duration-200">
                        {project.data.title}
                    </h1>
                </a>
            ))
        }
    </div>
    <Button classes="mt-10" href="/projects">See more projects</Button>
</div>

<script>
    const imgContainer = document.querySelectorAll(".img-container");
    imgContainer.forEach((img, index) => {
        let bottom = false;
        setTimeout(
            () => {
                setInterval(() => {
                    if (!bottom) {
                        img.scrollTo(0, img.scrollHeight);
                        bottom = true;
                    } else {
                        img.scrollTo(0, 0);
                        bottom = false;
                    }
                }, 5000);
            },
            1000 * (index + 1),
        );
    });
</script>
